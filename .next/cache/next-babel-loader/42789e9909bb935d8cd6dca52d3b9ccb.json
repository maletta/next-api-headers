{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from \"next/Head\";\nimport React from 'react';\nimport { useRouter } from 'next/router';\nexport async function getServerSideProps(context) {\n  const {\n    params,\n    req,\n    res,\n    query,\n    preview,\n    previewData\n  } = context;\n  console.error('-------------------------');\n  console.log(\"query \", query);\n  const {\n    storeCode,\n    productCode\n  } = query; // tratar erro de store não encontrada\n\n  const stringStoreFetched = `${process.env.NEXT_APP_SERVICE_API}/catalog/v1/loja/${storeCode}`;\n  const storeFetched = await fetch(stringStoreFetched).then(r => r.json());\n  const store = {\n    tenantId: storeFetched.id || '',\n    code: storeFetched.codigo || '',\n    user: storeFetched.usuario || '',\n    fantasy: storeFetched.fantasia || ''\n  };\n  const id = store.tenantId;\n  const idTeste = '3957a42e-74eb-4095-a662-70c01c346689';\n  console.log('store ', store); //tratar erro de produto e store não encontrados\n\n  const stringProduct = `${process.env.NEXT_APP_SERVICE_API}/catalog/v1/loja/${store.tenantId}/produtos/${productCode}`;\n  const productFetched = await fetch(stringProduct).then(r => r.json()); //console.log('stringProduct ', stringProduct);\n\n  console.log('productFetched ', productFetched);\n  const product = {\n    code: productFetched.codigo || '',\n    description: productFetched.descricao || '',\n    observation: productFetched.observacao || '',\n    price: productFetched.valorVenda || '',\n    tenantId: productFetched.tenant_id || '',\n    update: productFetched.atualizacao || ''\n  }; // console.log(process.env);\n\n  const stringFetchedImage = `${process.env.NEXT_APP_PHOTO_SERVICE}/list/?tenant_id=${id}&id=${productCode}`;\n  const productImagesFetched = await fetch(stringFetchedImage).then(r => r.json()).catch();\n  const [image] = productImagesFetched;\n  console.log('image ', image);\n  return {\n    props: {\n      store,\n      product,\n      image\n    }\n  };\n}\n\nconst ShareProduct = props => {\n  const {\n    store,\n    product,\n    image\n  } = props; // const imageURL = `${process.env.NEXT_APP_IMG_API_CDN}/?tenant_id=${image.key}&last_modified=${image.lastModified}`;\n\n  const imageURL = `${process.env.NEXT_APP_IMG_API_CDN}/product=${product.code}&lastUpdate=${product.update}`;\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"meta\", {\n    property: \"og:site_name\",\n    content: \"\"\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: \"localhost:3000\"\n  }), __jsx(\"meta\", {\n    name: \"og:title\",\n    property: \"og:title\",\n    content: store.description\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"website\"\n  }), __jsx(\"meta\", {\n    name: \"description\",\n    content: product.description\n  }), __jsx(\"meta\", {\n    name: \"og:description\",\n    property: \"og:description\",\n    content: product.description\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: imageURL\n  }), __jsx(\"meta\", {\n    property: \"og:image:alt\",\n    content: \"descrever imagem\"\n  }), __jsx(\"meta\", {\n    property: \"og:image:type\",\n    content: \"image/jpeg\"\n  }), __jsx(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary\"\n  }), __jsx(\"meta\", {\n    name: \"twitter:title\",\n    content: store.description\n  }), __jsx(\"meta\", {\n    name: \"twitter:description\",\n    content: product.description\n  }), __jsx(\"meta\", {\n    name: \"twitter:site\",\n    content: \"localhost:3000\"\n  }), __jsx(\"meta\", {\n    name: \"twitter:creator\",\n    content: \"maletta\"\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale1\"\n  }), __jsx(\"meta\", {\n    charSet: \"utf-8\"\n  }), __jsx(\"title\", null, \"\\\"Primeiro site next\\\"\")), __jsx(\"section\", null, __jsx(\"div\", {\n    className: \"content\"\n  }, \"SSR\"), __jsx(\"div\", {\n    className: \"content\"\n  }, \"SSR teste 2\")));\n};\n\nexport default ShareProduct;","map":null,"metadata":{},"sourceType":"module"}